<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[never615]]></title>
  <subtitle><![CDATA[创造价值]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://never615.com/"/>
  <updated>2016-05-28T04:55:38.000Z</updated>
  <id>http://never615.com/</id>
  
  <author>
    <name><![CDATA[never615]]></name>
    <email><![CDATA[never615@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[about me]]></title>
    <link href="http://never615.com/2016/05/28/index/"/>
    <id>http://never615.com/2016/05/28/index/</id>
    <published>2016-05-28T05:16:20.000Z</published>
    <updated>2016-05-28T04:55:38.000Z</updated>
    <content type="html"><![CDATA[<h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><ul>
<li>技术博客：<a href="http://www.jianshu.com/users/f543a4f0c9cc/latest_articles" target="_blank" rel="external">http://www.jianshu.com/users/f543a4f0c9cc/latest_articles</a></li>
<li>个人网站：<a href="http://never615.com">http://never615.com</a></li>
<li>github：<a href="https://github.com/never615" target="_blank" rel="external">https://github.com/never615</a></li>
</ul>
<h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1><table>
<thead>
<tr>
<th>任职时间</th>
<th>公司</th>
<th>职责 </th>
</tr>
</thead>
<tbody>
<tr>
<td>2015.09-至今</td>
<td><a href="http://www.mall-to.com" target="_blank" rel="external">深圳墨兔科技有限公司</a></td>
<td>android客户端开发&amp;后端开发</td>
</tr>
<tr>
<td>2015.07-2015.09</td>
<td><a href="http://igelian.com/" target="_blank" rel="external">深圳市个联科技有限公司</a></td>
<td>androidSDK&amp;客户端Demo开发</td>
</tr>
<tr>
<td>2014.12-2015.06</td>
<td><a href="http://baike.baidu.com/link?url=haAS96Am7c6H8GTcaXSSfU_eFg7T9ESsgx27II2scT3hpBFTzc1ISxufMgTGeIR5bZxHPW-zNOskgkE6vuOgCTfYkI_Q9rYQQxsvkF8wXkC" target="_blank" rel="external">深圳市虾逛互动有限公司</a></td>
<td>android 客户端开发</td>
</tr>
</tbody>
</table>
<h2 id="深圳墨兔科技有限公司"><a href="#深圳墨兔科技有限公司" class="headerlink" title="深圳墨兔科技有限公司"></a>深圳墨兔科技有限公司</h2><h3 id="招呼app"><a href="#招呼app" class="headerlink" title="招呼app"></a>招呼app</h3><p><a href="http://sj.qq.com/myapp/detail.htm?apkName=com.mallto.seaworld" target="_blank" rel="external">招呼android客户端</a> </p>
<p>此项目相关总结:<a href="http://www.jianshu.com/p/8133f1e58371" target="_blank" rel="external">http://www.jianshu.com/p/8133f1e58371</a></p>
<p>我在此项目中主要负责了项目工作量的预估安排、项目架构的搭建和开发中问题的解决。功能模块主要负责地图、定位和导航模块等。项目的更详细总结请参考上方链接。熟悉整个项目的开发流程，能够有效推动项目的进行，协同同组开发人员。</p>
<p>自己实现了导航模块的相关最短路径算法，定位模块使用jni调用定位相关的c代码。UI相关如自己实现了地图上弹出气泡的的操作等。提供了跨层跨空间导航的实现思路，并完成相关的工具代码。</p>
<p>项目结构参考the clean architecture，分为表现层（使用MVP）、用例层和数据层。大量使用面向接口编程，在需要实现相关模块时，首先思考具体功能，使用抽象的方法完成所有表现层和具体业务层的逻辑，这样有助于理清思路，项目的结构也比较清晰，然后具体的实现可以分发给不同的人完成也可以很好的协同合作。</p>
<h3 id="SDK开发"><a href="#SDK开发" class="headerlink" title="SDK开发"></a>SDK开发</h3><p>进行室内定位、地图、导航SDK的设计，并大体完成定位SDK的封装、相关的开发文档、jcenter仓库的部署和使用docker搭建自己的私服仓库。因公司业务的需要，后续SDK暂时没有继续封装。</p>
<h3 id="招呼后端和花园城微信后端开发"><a href="#招呼后端和花园城微信后端开发" class="headerlink" title="招呼后端和花园城微信后端开发"></a>招呼后端和花园城微信后端开发</h3><p>后端主要使用php开发，负责招呼客户端和后台管理端对应后台的部分功能开发、维护和定位、导航相关模块的java jar包的封装，使用gcc编译了linux平台下需要使用的定位so库，使用git配合钩子实现项目的不同环境的部署。</p>
<p>负责服务器环境的搭建和维护，负责花园城微端项目的后端开发，并对接协同第三方开发方并提供接口文档。</p>
<h2 id="深圳市个联科技有限公司"><a href="#深圳市个联科技有限公司" class="headerlink" title="深圳市个联科技有限公司"></a>深圳市个联科技有限公司</h2><h3 id="androidSDK和Demo的开发"><a href="#androidSDK和Demo的开发" class="headerlink" title="androidSDK和Demo的开发"></a>androidSDK和Demo的开发</h3><p>智能家居相关的项目，我主要负责androidSDK和客户端Demo的开发，主要使用socket通信、广播和进程间通信的相关知识，在局域网环境中可以直接控制设备、有网条件下可以通过移动网络经过服务器控制设备。此外还深入参与产品做法相关的讨论并提出了一种针对家庭和公司环境的技术设计方案。</p>
<p>Demo主要完成了用户的注册、登录、设备与用户账户的绑定与解绑。SmartConfig配置设备联网、扫描发现设备、对不同型号协议设备的局域网控制和经过服务器网络的进行控制。</p>
<h2 id="深圳市虾逛互动有限公司"><a href="#深圳市虾逛互动有限公司" class="headerlink" title="深圳市虾逛互动有限公司"></a>深圳市虾逛互动有限公司</h2><h3 id="虾逛android客户端的开发"><a href="#虾逛android客户端的开发" class="headerlink" title="虾逛android客户端的开发"></a>虾逛android客户端的开发</h3><p>这个项目是我做的第一个商业项目同时也是我的毕设项目，所以我介绍多一点。</p>
<p>项目描述：</p>
<p>主要功能：</p>
<ol>
<li>商场室内地图查询</li>
<li>商场室内导航</li>
<li>停车场寻车</li>
<li>查询商场的活动、位置和热门店铺</li>
<li>查询店铺团购、独家优惠和店铺位置</li>
<li>离线地图管理</li>
</ol>
<p>项目的用户用例图：</p>
<img src="/2016/05/28/index/用例图.png" alt="用例图.png" title="">
<p>技术要点：</p>
<p>本系统根据三层架构（3-tier architecture）设计思想来构建系统，大体上分为显示层，业务逻辑层和数据访问层。<br>主要技术难点在于室内定位和室内导航的部分。<br>包括定位算法的的选择和处理，如使用基站法和三角定位的处理，信号的平滑处理等；导航方面的路径规划，也就是最短路径的算法的处理等。<br>Android中的技术点，比如fragment的使用、上拉加载、屏幕适配等等应用层的基本技术点不一一描述了。</p>
<p>项目中的作用：</p>
<p>从最初项目架构的搭建、同组协同开发分配任务、到项目中众多难点的解决、路径规划算法的完成，到最后的测试发布，都是我负责的。</p>
<h1 id="技术文章"><a href="#技术文章" class="headerlink" title="技术文章"></a>技术文章</h1><ul>
<li><a href="http://www.jianshu.com/p/9c3b4ea108a7" target="_blank" rel="external">使用Retrofit和Okhttp实现网络缓存。无网读缓存，有网根据过期时间重新请求</a></li>
<li><a href="http://www.cnblogs.com/never615/p/4444298.html" target="_blank" rel="external">android手机适配方案</a> </li>
</ul>
<h1 id="技能清单"><a href="#技能清单" class="headerlink" title="技能清单"></a>技能清单</h1><p>以下均为我熟练使用的技能</p>
<ul>
<li>Web开发：PHP</li>
<li>Web框架：Lavaral</li>
<li>前端开发：android</li>
<li>android架构：clean架构/mvp/mvvm/领域驱动设计</li>
<li>android库：Rxjava/dagger2/greendao/okhttp/retrofit/androidEventBus/glide等</li>
<li>数据库相关：PgSQL/SQLite</li>
<li>版本管理、文档和自动化部署工具：Svn/Git/git flow/API-Blueprint/Composer/gradle</li>
<li>云和开放平台：阿里云/微信应用开发</li>
</ul>
<p>android方面：</p>
<ul>
<li>熟练使用LeanCloud、mapbox、友盟等各种第三方平台</li>
<li>熟悉toolbar、cardview、recyclerview、FAB和新的动画效果主题的使用</li>
<li>熟练掌握Android下的屏幕适配和百分比适配</li>
<li>熟练掌握Handler消息机制，进程间通信，AIDL的IPC机制调用远程服务</li>
<li>熟练掌握Android中事件的分发机制，viewpager和内部嵌套的view的事件交互规则</li>
<li>熟练掌握Android的JNI规范及其NDK的使用</li>
<li>熟练掌握自定义控件、状态选择器、自定义属性、四大组件、listview的优化、下拉刷新等等android基本知识</li>
<li>java基础扎实，熟练掌握OOP思想，掌握集合框架、IO流、多线程、枚举、泛型、动态代理、反射、类加载器等</li>
</ul>
<p>其他：</p>
<ul>
<li>有技术总结的习惯，大量总结在为知笔记里</li>
<li>熟练使用思维导图、markdown等工具</li>
<li>有代码洁癖，良好的编码风格，喜欢追求简洁代码和代码效率</li>
</ul>
<h1 id="大学学习时项目"><a href="#大学学习时项目" class="headerlink" title="大学学习时项目"></a>大学学习时项目</h1><h2 id="安全卫士"><a href="#安全卫士" class="headerlink" title="安全卫士"></a>安全卫士</h2><p>###项目描述： </p>
<p>模仿360安全卫士，实现手机防盗，通讯卫士，软件管家，进程管理，流量统计，手机杀毒，缓存清理，程序锁，号码归属地查询，短信的备份和还原，常用号码查询，号码归属地显示。<br>Github中附有代码和思维导图文件（mymap文件夹下）</p>
<p>###技术要点：<br>手机防盗：开机检查sim卡变化；通过广播接收者接受短信指令，实现播放报警音乐，手机定位，远程锁屏和清理手机数据（使用设备超级管理员DevicePolicyManager）</p>
<p>通讯卫士：实现对黑名单号码的短信电话拦截。在service中用代码开启短信广播接收者实现拦截短信；通过电话监听者监听电话状态，通过反射最终调用到系统底层的endCall()方法挂断电话，注册内容观察者删除通话记录。</p>
<p>软件管家：用listview显示手机上应用的安装位置大小信息，实现应用的设置，分享，启动，卸载。（listview的优化：复用不同item，家庭组容器）。</p>
<p>进程管理：listview显示进程，分系统进程和用户显示，提供清理，全选，反选，设置（是否显示系统应用，自动杀进程）功能。Weidget桌面插件，显示进程情况，实现一键清理。（通过在service中主动控制weidget的更新周期）。</p>
<p>缓存清理：通过反射调用系统中的getPackageSizeInfo()方法获得应用的缓存，利用系统的漏洞，给系统发送消息内存空间不够用，系统自动清理所有应用的缓存（通过反射调用freeStorageAndNotify()）。</p>
<p>归属地查询：自动监听输入框文本做查询显示，EditText为空时使用动画插入器抖动，手机震动。</p>
<p>短信备份：拿短信的内容提供者获取短信内容，xml序列化存储到本地。抽取接口编程，备份短信进度显示样式不确定，提供方法给调用者完成。抽取短信备份之前的回调方法和短信备份中的回调方法。调用者方便设置进度参数。</p>
<p>程序锁：上使用fragment显示加锁和未加锁界面，写看门狗服务监听最近的任务栈包名，检查是否加锁弹出密码界面。省电优化：注册广播接收者，锁屏时关闭看门狗服务。</p>
<p>号码归属地显示：监听电话状态和外拨电话，使用自定义toast显示归属地。</p>
<h2 id="智慧北京"><a href="#智慧北京" class="headerlink" title="智慧北京"></a>智慧北京</h2><h3 id="项目描述："><a href="#项目描述：" class="headerlink" title="项目描述："></a>项目描述：</h3><p>模仿智慧北京和网易新闻，github中有源码和简介。 </p>
<h3 id="技术要点："><a href="#技术要点：" class="headerlink" title="技术要点："></a>技术要点：</h3><ol>
<li>使用Xutils开源框架技术向服务器发送http请求访问某个页面</li>
<li>页面布局主要使用SlidingMenu，ViewPagerIndicator和fragment+ViewPager组合实现。</li>
<li>获取json数据后，通过Google开源的Gson解析获取到的json数据</li>
<li>ListView的头部是一个自定义可以轮播的ViewPager</li>
<li>listview优化：复用convertView，减少findViewById的次数；利用ViewHolder</li>
<li>数据的缓存处理</li>
<li>ViewPager和内部view的交互</li>
<li>使用模板设计模式抽取基类代码</li>
<li>使用开源项目PullToRefreshListView实现listView下拉刷新，上拉加载更多。</li>
<li>消息推送使用第三方推送平台：极光JPush推送平台,第三方登录使用：ShareSDK</li>
</ol>
<img src="/2016/05/28/index/智慧北京.png" alt="智慧北京.png" title="">
<h2 id="电子市场"><a href="#电子市场" class="headerlink" title="电子市场"></a>电子市场</h2><h3 id="项目描述：-1"><a href="#项目描述：-1" class="headerlink" title="项目描述："></a>项目描述：</h3><p>模仿谷歌电子市场，github中有源码和思维导图。</p>
<h3 id="技术要点：-1"><a href="#技术要点：-1" class="headerlink" title="技术要点："></a>技术要点：</h3><ol>
<li>主界面使用指针+viewPager（使用FragmentPagerAdapter适配器）</li>
<li>抽取基类fragment，请求网络操作，显示界面操作由多种界面情况，抽取LoadingPage管理各种界面（错误界面，空界面…）。</li>
<li>抽取基类Holder，因为多个页面都要用到listview，需要使用holder</li>
<li>抽取基类BaseAdapter，面向holder编程（BaseHolder），使结构更加清晰</li>
<li>采用模板式封装框架基类，完成相应接口的回调，定义抽象方法，提高代码的复用性，降低耦合度。</li>
</ol>
<h2 id="通讯卫士"><a href="#通讯卫士" class="headerlink" title="通讯卫士"></a>通讯卫士</h2><p><a href="http://www.wandoujia.com/apps/com.never.callsmssafe" target="_blank" rel="external">http://www.wandoujia.com/apps/com.never.callsmssafe</a></p>
<p>豌豆荚可以搜索到，这个是完成学校作业做得，用了一晚上，主要功能就是拦截电话和短信。然后体验了一下完成的上架市场流程。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><ul>
<li>技术博客：<a href="http://www.jianshu.com/users/f543a4f0c9cc/]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS7.0下搭建nginx+php7+postgresql+laravel的运行环境]]></title>
    <link href="http://never615.com/2016/05/28/CentOS7.0%E4%B8%8B%E6%90%AD%E5%BB%BAnginx+php7+postgresql+laravel%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/"/>
    <id>http://never615.com/2016/05/28/CentOS7.0下搭建nginx+php7+postgresql+laravel的运行环境/</id>
    <published>2016-05-28T04:37:37.000Z</published>
    <updated>2016-05-28T04:37:37.000Z</updated>
    <content type="html"><![CDATA[<p>只讲述如何配置一个laravel应用可以运行的基本环境，其他的如权限管理、禁止root远程登录、ssh密码登录、防火墙等不涉及。<br>这些东西配置下来给我最大的感悟就是,首先去查官网资料…<br><a id="more"></a></p>
<p>安装步骤大体分为以下几步：</p>
<ol>
<li>基本环境配置</li>
<li>安装php-fpm（同时安装了php） </li>
<li>安装composer</li>
<li>安装postgresql并配置</li>
<li>安装nginx</li>
<li>创建一个laravel应用并配置nginx</li>
</ol>
<h2 id="CentOs基本环境配置"><a href="#CentOs基本环境配置" class="headerlink" title="CentOs基本环境配置"></a>CentOs基本环境配置</h2><p>在CentOS上管理软件可以使用yum作为包管理工具，可以用命令查询、删除、下载、安装、删除系统上的软件。</p>
<p>yum的使用：<a href="https://access.redhat.com/sites/default/files/attachments/rh_yum_cheatsheet_1214_jcs_print-1.pdf" target="_blank" rel="external">yum参考手册</a></p>
<p>系统官方的资源库提供的软件不能满足我们的需求，比如搜索php70u，会提示NO Matches found，所以我们要添加额外的资源库。</p>
<p>在这里可以找到ius的包，<a href="https://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/repoview/ius-release.html" target="_blank" rel="external">https://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/repoview/ius-release.html</a>。</p>
<p>复制包地址，使用wget下载，会下载到当前目录。</p>
<pre><code>wget https://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/ius-release-1.0-14.ius.centos7.noarch.rpm
</code></pre><p>然后使用命令安装：</p>
<pre><code>rpm -ivh ius-release-1.0-10.ius.el6.noarch.rpm epel-release-6-5.noarch.rpm
</code></pre><p>如果安装失败，提示你安装epel,就用yum search epel，然后安装。</p>
<h2 id="安装php-fpm和php-安装php常用扩展"><a href="#安装php-fpm和php-安装php常用扩展" class="headerlink" title="安装php-fpm和php,安装php常用扩展"></a>安装php-fpm和php,安装php常用扩展</h2><p>搜索php-fpm：</p>
<pre><code>yum search php70u-fpm
</code></pre><p>安装，因为yum会自动解决软件之间的依赖，所以会自动安装php</p>
<pre><code>yum install php70u-fpm
</code></pre><p>查看php-fpm的状态：</p>
<pre><code>systemctl status php-fpm
</code></pre><p>启动php——fpm:</p>
<pre><code>systemctl start php-fpm
</code></pre><p>设置开机启动：</p>
<pre><code>systemctl enable php-fpm
</code></pre><p>安装php常用的扩展：</p>
<pre><code>yum install php70u-gd php70u-mysqlnd php70u-pdo php70u-mcrypt php70u-mbstring php70u-json php70u-cli -y
</code></pre><p>安装完成需要重新加载php-fpm:</p>
<pre><code>systemctl reload php-fpm
</code></pre><h2 id="安装composer"><a href="#安装composer" class="headerlink" title="安装composer"></a>安装composer</h2><p>composer是php中管理依赖的工具<a href="https://getcomposer.org/doc/00-intro.md" target="_blank" rel="external">官网</a></p>
<pre><code>php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;
php -r &quot;if (hash_file(&apos;SHA384&apos;, &apos;composer-setup.php&apos;) === &apos;92102166af5abdb03f49ce52a40591073a7b859a86e8ff13338cf7db58a19f7844fbc0bb79b2773bf30791e935dbd938&apos;) { echo &apos;Installer verified&apos;; } else { echo &apos;Installer corrupt&apos;; unlink(&apos;composer-setup.php&apos;); } echo PHP_EOL;&quot;
php composer-setup.php
php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;
</code></pre><p>这几条命令的意思就是：下载；校验；安装；删除安装包；</p>
<p>在国内使用composer如果没有翻墙的话，可以使用镜像。<a href="http://pkg.phpcomposer.com/" target="_blank" rel="external">镜像地址</a></p>
<h2 id="安装postgresql并配置"><a href="#安装postgresql并配置" class="headerlink" title="安装postgresql并配置"></a>安装postgresql并配置</h2><p>直接使用yum安装地方postgres不是最新的，一些新特性无法使用，建议按<a href="http://www.postgresql.org/download/linux/redhat/" target="_blank" rel="external">官网</a>教程安装最新版。</p>
<pre><code>yum install https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm
</code></pre><p>完成之后：</p>
<pre><code>yum install postgresql94-server postgresql94-contrib
/usr/pgsql-9.4/bin/postgresql94-setup initdb
systemctl enable postgresql-9.4.service
systemctl start postgresql-9.4.service
yum install php70u-pgsql
</code></pre><p>查看是否安装成功：</p>
<pre><code>rpm -aq|grep postgres
</code></pre><p>配置:<br>postgres安装完成之后会生成名为postgres的数据库、数据库用户和linux系统用户</p>
<ul>
<li><p>切换到postgres用户：</p>
<pre><code>sudo su - postgres
</code></pre></li>
<li><p>使用psql命令登录PostgreSQL：</p>
<pre><code>psql
</code></pre></li>
</ul>
<p>这时相当于系统用户postgres以同名数据库用户的身份，登录数据库，这是不用输入密码的。如果一切正常，系统提示符会变为”postgres=#”，表示这时已经进入了数据库控制台。以下的命令都在控制台内完成。</p>
<ul>
<li><p>第一件事是使用\password命令，为postgres用户设置一个密码。</p>
<pre><code>\password postgres
</code></pre></li>
<li><p>创建数据库用户dbuser，并指定其为超级用户 </p>
<pre><code>sudo -u postgres createuser --superuser dbuser
</code></pre></li>
<li><p>登录数据库控制台，设置dbuser用户的密码，完成后退出控制台（postgres安装完成之后会生成名为postgres的数据库、数据库用户和linux系统用户）psql命令是登录PostgreSQL控制台</p>
<pre><code> sudo -u postgres psql
\password dbuser
\q
</code></pre></li>
<li><p>创建数据库exampledb，并指定所有者为dbuser</p>
<pre><code>sudo -u postgres createdb -O dbuser exampledb
</code></pre></li>
</ul>
<p>我是使用Navicat Premium和Postico作为数据库管理软件的。Postico更轻，查看修改数据比较方便，Navicat功能比较强大。</p>
<h3 id="数据库直接安装完成之后是不能远程访问的，如果需要远程访问的话，需要配置一下："><a href="#数据库直接安装完成之后是不能远程访问的，如果需要远程访问的话，需要配置一下：" class="headerlink" title="数据库直接安装完成之后是不能远程访问的，如果需要远程访问的话，需要配置一下："></a>数据库直接安装完成之后是不能远程访问的，如果需要远程访问的话，需要配置一下：</h3><p>修改postgresql.conf和pg_hba.conf这两个文件。</p>
<p>可以使用locate命令定位这两个文件，updatedb命令可以更新locate文件，如果刚安装完没有找到这两个文件，可以调用这个命令刷新一下。</p>
<ul>
<li><p>postgresql.conf配置</p>
<pre><code>listen_addresses = &apos;*&apos;     //监听所有ip的连接，默认是本机  
port = 5432             //这个不开也行，默认就是5432端口
</code></pre></li>
<li><p>pg_hba.conf配置</p>
<pre><code>配置host    all         all         0.0.0.0/0             trust
</code></pre></li>
<li>如果配置防火墙，记得开放端口</li>
</ul>
<p>修改完记得重启。</p>
<h2 id="安装nginx并配置"><a href="#安装nginx并配置" class="headerlink" title="安装nginx并配置"></a>安装nginx并配置</h2><p><a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="external">nginx官网安装教程</a></p>
<p>想安装最新nginx，我们需要先添加nginx的库。</p>
<p>创建文件/etc/yum.repos.d/nginx.repo，并写入以下内容：</p>
<pre><code>[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/mainline/centos/OSRELEASE/7/
gpgcheck=0
enabled=1    
</code></pre><p>或者使用rpm安装：</p>
<pre><code>rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
</code></pre><p>然后使用yum命令安装nginx即可。</p>
<h2 id="创建一个laravel应用并配置nginx"><a href="#创建一个laravel应用并配置nginx" class="headerlink" title="创建一个laravel应用并配置nginx"></a>创建一个laravel应用并配置nginx</h2><p><a href="https://laravel.com/docs/5.2" target="_blank" rel="external">laravel官方文档</a></p>
<ul>
<li>先通过composer下载laravel<code>composer global require &quot;laravel/installer&quot;</code></li>
<li>创建一个laravel项目<code>composer create-project --prefer-dist laravel/laravel blog</code></li>
</ul>
<p>简单的nginx配置使其可以访问laravel应用：<br>配置文件在/etc/nginx/conf.d目录下。一个基本的配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server &#123;&#10;   listen 81;&#10;   server_name www.laravel.com;     &#10;   root /data1/www/laravelapps/app/blog/public;&#10;   index index.php index.html index.htm;&#10;&#10;   location / &#123;&#10;        try_files $uri $uri/ /index.php?$query_string;&#10;   &#125;&#10;&#10;   location ~ \.php$ &#123;&#10;    &#9;fastcgi_pass   127.0.0.1:9000;&#10;    &#9;fastcgi_index  index.php;&#10;      fastcgi_param  SCRIPT_FILENAME  $document_root&#9;&#9;$fastcgi_script_name;&#10;      include        fastcgi_params;&#10;      fastcgi_param   SCRIPT_NAME  $fastcgi_script_name;     &#10;   &#125;&#10;&#125;&#10;&#10;`</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>只讲述如何配置一个laravel应用可以运行的基本环境，其他的如权限管理、禁止root远程登录、ssh密码登录、防火墙等不涉及。<br>这些东西配置下来给我最大的感悟就是,首先去查官网资料…<br>]]>
    
    </summary>
    
      <category term="centos" scheme="http://never615.com/tags/centos/"/>
    
      <category term="web环境搭建" scheme="http://never615.com/tags/web%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="web" scheme="http://never615.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[项目总结、阶段小结]]></title>
    <link href="http://never615.com/2016/04/06/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://never615.com/2016/04/06/项目总结/</id>
    <published>2016-04-05T17:30:26.000Z</published>
    <updated>2016-04-05T17:30:26.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>距离上一个项目大体完成已经有一段时间了，一直说总结一下却一直拖着，最近已经开始php的学习了，觉得实在不能再拖了，需要对上一个阶段总结一下，然后好好的开始下一个阶段了。<br><a id="more"></a></p>
<h2 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h2></blockquote>
<p>项目的架构参考的是<a href="http://zhuanlan.zhihu.com/p/20001838" target="_blank" rel="external">简洁架构</a>(我最早就是在这个文章看到的介绍，真正使用已经是15年9月低了)，P层使用的是MVP。</p>
<img src="/2016/04/06/项目总结/架构1.png" alt="架构1.png" title="">
<img src="/2016/04/06/项目总结/架构2.png" alt="架构2.png" title="">
<p>实践的结果还是十分满意的，项目的结构很清晰，各层各司其职，井井有条。并且我开始习惯写接口，使用抽象的逻辑先完成整个框架的搭建，具体的实现分成一个一个的任务，可以让实现具体功能的人不用理解整个复杂的业务流程，也能保证开发的顺利进行。大大保证了项目的质量和开发的效率。</p>
<p>当然中间也有崎岖探索，随着一步步的实践，自己的理解也慢慢加深。当初开始使用的时候和后期项目差不多完成的时候，我又看了很多项目和架构的文章代码。领域驱动设计、mvvm、变形的mvp、插件化开发、跨平台等等。</p>
<p>到此我才越来越觉得编程思想的相通，越来越多的看到的东西并不是android圈或者纯android开发者的讨论了，很多web开发者的文章讨论。在web中早已经使用的IOC、数据绑定、mvvm等等再android开发中也渐渐的开始讨论到越来越多、使用的越来越多。</p>
<p>而这些在我近期开始php学习的时候也愈发显现出来，让我可以更快的接收概念理解上手。</p>
<h2 id="第三方轮子"><a href="#第三方轮子" class="headerlink" title="第三方轮子"></a>第三方轮子</h2><p>因为是小公司，所以基础库都是一些主流的轮子。</p>
<ul>
<li>图片库使用谷歌推荐的glide，facebook的fresco也很不错，但是我现在没有时间去研究它；</li>
<li>网络库使用retrofit+okhttp（缓存使用okhttp自带的缓存处理，<a href="http://www.jianshu.com/p/9c3b4ea108a7" target="_blank" rel="external">可以参考我之前的文章</a>）；</li>
<li>响应式编程RxJava（给我带来了新的编程思考方式，Everything is a stream.）</li>
<li>依赖注入的dagger2，刚开始的时候真的是一头雾水，因为不太明白依赖注入是个什么东西，做web开发的同学应该对依赖注入司空见惯了吧。特别是我前一段时间封装sdk，抽离dagger，又开始大量new对象的时候，更是觉得dagger的舒服。</li>
<li>数据库greendao，你需要建一个java工程写一些配置约束的代码，然后就可以帮你生成dao和model，真是太方便了，没有反射效率也高。</li>
<li>事件总线使用的是androidEventBus，注意不是greenrobot的eventbus。</li>
<li>印象笔记的android-job用来处理后台事件，它会根据android版本的不同来调用obScheduler, GcmNetworkManager 或者 AlarmManager。</li>
<li>还有一些小库如：处理日志logger、键值对存储的Hawk、注解绑定事件和方法的butterKnife，都是很好用的。</li>
<li>室内定位服务组件：室内定位、室内地图、室内导航，有业务需求的欢迎联系我。</li>
</ul>
<h2 id="一些项目总结"><a href="#一些项目总结" class="headerlink" title="一些项目总结"></a>一些项目总结</h2><ul>
<li>架构不是来限制你的，是来帮助你的，所以千万不要本末倒置，要活学活用。（在初期基本是邯郸学步，有样学样，即便是感觉这样做很不爽了，也还在坚持这样做。不过后来终于想通了，按照自己的想法理解开始改造，最后结果是：随着业务的不断扩大复杂，终于明白为什么有些要那么做，哈哈，不过也有很多改的对的，总之就是要知行合一！）</li>
<li>父级P类不用写resume和pause方法，因为很多情况是不需要这两个方法的；</li>
<li>父级P写setView（设置view接口）和initData，这两个是所有P都要实现的，所以写到父级；为什么不合并这两个，因为对象的初始化在setView中，是一次就够了，但是initData不一定，比如可能要在onNewIntent中调用。</li>
<li>每个module配置自己的混淆文件,方便管理，在application的pro_guard_rules配置也可以，但是当module不用时appliction会产生冗余配置还要处理。</li>
<li>每个module配置自己的依赖，为了高内聚，并且打包的时候并不会重复打包不同module之间的相同引用。</li>
<li>所有的跳转都要走navigator,（navigator是统一处理页面跳转的类）</li>
</ul>
<h2 id="一些好用的东西"><a href="#一些好用的东西" class="headerlink" title="一些好用的东西"></a>一些好用的东西</h2><ul>
<li>使用AndroidStudio进行开发，有很多朋友的公司还在使用eclipse开发，听着就替他揪心。<h3 id="AndroidStudio插件"><a href="#AndroidStudio插件" class="headerlink" title="AndroidStudio插件"></a>AndroidStudio插件</h3></li>
<li>.ignore ，当然同系的软件都可以用，想PhpStorm、IntelliJ、WebStorm等。</li>
<li>Android  ButterKnife Zelezny （AndroidStudio插件）这个是配合 ButterKnife使用的，让你从findviewbyid中解脱，当然如果你使用databinding的话，也不用findviewbyid了。。</li>
<li>GsonFormat 让你从写json相关的实体类中解脱</li>
<li>WakaTime <a href="https://wakatime.com/dashboard" target="_blank" rel="external">这是他的网站</a>，统计你各种编程的时间。<h3 id="AndroidStudio使用"><a href="#AndroidStudio使用" class="headerlink" title="AndroidStudio使用"></a>AndroidStudio使用</h3></li>
<li>AndroidStudio setting Http Proxy 选择sockets，配置127.0.0.1 1080配合ShadowSocks使用</li>
<li>配置使用代码模板，团队模板要统一。</li>
<li>commed+f12 查看结构</li>
<li>F3 代码加书签，commed+F3</li>
<li>alt+commed+t 配置代码包裹</li>
<li>commed+alt+B 查看方法的实现</li>
<li>commed+U 查看方法的抽象方法（接口写多了，这一对还是很常用的）<h3 id="chrome插件"><a href="#chrome插件" class="headerlink" title="chrome插件"></a>chrome插件</h3></li>
<li>Postman 一款功能强大的网页调试与发送网页HTTP请求的Chrome插件。</li>
<li>ChromeADB</li>
<li>OneTab 可以帮你把打开的很多网页收起来存着，很方便。在windows上用chrome打开太多页面会很占资源变卡，但是在mac上感觉还好。(顺便推荐mac pro做开发，真的好用)</li>
<li>Octotree 浏览github代码的时候，左侧可以树桩浏览目录结构，十分方便。</li>
<li>JSONView 格式化json数据</li>
<li>有道词典 英语不好的，经常查单词太慢，用这个还是很好用的。</li>
<li>Vysor 同步android手机画面，并且可以控制，记得大学答辩的时候用的一个延迟好大，这个延迟很低。<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3></li>
<li><a href="www.versioneye.com">versioneye</a> 项目中引用了很多第三方库，他可以提醒你哪些库可以升级了，我的项目所有依赖都配置在dependencies.gradle中，我把这个文件上传上去就识别了，但是库好像不全。。其他项目像php的也都可以使用。</li>
<li>mac软件推荐到 www.ifunmac.com，虽然是要收费的，但是不贵还是很值的，省去了找软件的时间，并且更新很快。</li>
<li>No Sleep 让你的mac不sleep</li>
<li>如果你在找一个地方写博客的话，我推荐简书。</li>
<li>笔记是积累，博客是沉淀，我一直在用为知笔记，mac版的不如windows的好用，你也可以尝试印象笔记等。我也试过<a href="http://dynalon.github.io/mdwiki/#!index.md" target="_blank" rel="external">mdwiki</a>和<a href="http://tiddlywiki.com/" target="_blank" rel="external">tiddlywiki.com</a>,但是感觉不如为知笔记好用，主要效率就差很多。位置笔记各个平台上也都有客户端让你的体验更好。</li>
<li><a href="https://get.fabric.io/android?locale=zh-cn" target="_blank" rel="external">fabric</a>Twitter的移动应用开发平台。我在androidStudio装插件一直登陆不上。。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>距离上一个项目大体完成已经有一段时间了，一直说总结一下却一直拖着，最近已经开始php的学习了，觉得实在不能再拖了，需要对上一个阶段总结一下，然后好好的开始下一个阶段了。<br>]]>
    
    </summary>
    
      <category term="mvp" scheme="http://never615.com/tags/mvp/"/>
    
      <category term="简洁架构" scheme="http://never615.com/tags/%E7%AE%80%E6%B4%81%E6%9E%B6%E6%9E%84/"/>
    
      <category term="android" scheme="http://never615.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux下使用gcc编译so库]]></title>
    <link href="http://never615.com/2016/03/17/linux%E4%B8%8B%E4%BD%BF%E7%94%A8gcc%E7%BC%96%E8%AF%91so%E5%BA%93/"/>
    <id>http://never615.com/2016/03/17/linux下使用gcc编译so库/</id>
    <published>2016-03-17T15:11:00.000Z</published>
    <updated>2016-03-17T15:11:00.000Z</updated>
    <content type="html"><![CDATA[<p>最近公司在做微信端的定位和导航，所以需要云端提供导航和定位功能，为了复用之前客户端的代码，所以我需要把c文件编译成linux下可以运行的so库，记录一下过程。</p>
<a id="more"></a>
<p>由于没有搞过，所以遇到问题也不知道具体是哪里的问题，所以就一路乱试。。。最后试了下，可以用。</p>
<h3 id="用到的一些gcc命令"><a href="#用到的一些gcc命令" class="headerlink" title="用到的一些gcc命令"></a>用到的一些gcc命令</h3><blockquote>
<p>-shared:指定生成动态连接库,不用该标志外部程序无法连接。相当于一个可执行文件(我开始没加这个，报错找不到main)</p>
<p>-fPIC:表示编译为位置独立的代码，不用此选项的话编译后的代码是位置相关的所以动态载入时是通过代码拷贝的方式来满足不同进程的需要，而不能达到真正代码段共享的目的。</p>
<p>-I:指定头文件所在的文件夹</p>
</blockquote>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="编译时报错：找不到jni-h"><a href="#编译时报错：找不到jni-h" class="headerlink" title="编译时报错：找不到jni.h"></a>编译时报错：找不到jni.h</h4><p>我用虚拟机装了Ubuntu，输入java没有找到，然后按着提示随便装了一个。。。<br>当然我现在知道装的是OpenJDK(<a href="https://www.zhihu.com/question/19646618" target="_blank" rel="external">OpenJDK和SunJDK的区别</a>)，google也决定在android N中使用OpenJDK了(<a href="http://www.infoq.com/cn/news/2016/01/android-openjdk" target="_blank" rel="external">相关报道</a>)。。</p>
<p>所以我又下载了SunJDK，编译的时候要引用相关文件,加如下命令</p>
<pre><code>-I/[jdk目录]/include -I/[jdk目录]/include/linux
</code></pre><p>[jdk目录]/include是jni.h所在目录；<br>[jdk目录]/include/linux是jni_md.h所在目录</p>
<h4 id="编译报错：找不到main"><a href="#编译报错：找不到main" class="headerlink" title="编译报错：找不到main"></a>编译报错：找不到main</h4><p>没有加命令 -shared(命令介绍参考上面)</p>
<h4 id="编译时报错：找不到math-h"><a href="#编译时报错：找不到math-h" class="headerlink" title="编译时报错：找不到math.h"></a>编译时报错：找不到math.h</h4><p>使用math.h中声明的库函数，gcc命令行必须加-lm选项，因为数学函数位于libm.so库文件中（这些库文件通常位于/lib目录下），-lm选项告诉编译器，我们程序中用到的数学函数要到这个库文件里找。</p>
<p>我最后是把c文件一个一个编译成.o然后，然后在编译成.so的，因为怕出错，不知道哪个文件的问题。。。当然也可以直接一句话如下：</p>
<pre><code>gcc [.c文件，多个用空格隔开] -fPIC -shared -I/usr/xxx/include -I/usr/xxx/include/linux -lm -o libtest.so
</code></pre><p>编译成.o命令:gcc -c test.c</p>
<p>.o编译成.so:gcc test.o -o test(默认会添加lib前缀和.so后缀)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近公司在做微信端的定位和导航，所以需要云端提供导航和定位功能，为了复用之前客户端的代码，所以我需要把c文件编译成linux下可以运行的so库，记录一下过程。</p>]]>
    
    </summary>
    
      <category term="gcc" scheme="http://never615.com/tags/gcc/"/>
    
      <category term="so库" scheme="http://never615.com/tags/so%E5%BA%93/"/>
    
      <category term="linux" scheme="http://never615.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[个人小站建站记]]></title>
    <link href="http://never615.com/2016/02/26/%E4%B8%AA%E4%BA%BA%E5%B0%8F%E7%AB%99%E5%BB%BA%E7%AB%99%E8%AE%B0/"/>
    <id>http://never615.com/2016/02/26/个人小站建站记/</id>
    <published>2016-02-25T17:38:25.000Z</published>
    <updated>2016-02-25T17:38:24.000Z</updated>
    <content type="html"><![CDATA[<h1 id="个人小站建站记"><a href="#个人小站建站记" class="headerlink" title="个人小站建站记"></a>个人小站建站记</h1><blockquote>
<p>折腾了两天终于搭起了自己的第一个站点，恩，一件让我充满幸福感的事☺️。</p>
</blockquote>
<p>小站是用git page和hexo搭建的，使用的的主题是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>。我选择主题最重要的标准就是文章的目录好不好用，哈哈，所以看了很多之后选择了这个。</p>
<a id="more"></a>
<p>未来计划业余技术时间主要在以下两个个方面，这些也将伴随着小站内容的丰富。</p>
<p><strong>web</strong></p>
<p>最近也计划复习复习web并加深学习一下，一来是为了自己玩的更爽，二来是因为随着学习的深入，越来越发觉编程思想的相通，而相比android，web发展则要久远的多，过去一段时间在android圈一个一个火起来的东西，思想在web圈由来已有，三来也是为之后跨平台的学习做一个铺垫。</p>
<p><strong>android</strong></p>
<p>此外也计划把之前学习的android知识在系统的整理一下，同时也买了两本android的书和一本讲android源码设计模式的，当做工具书和查漏补缺，完善我的知识体系，我是比较喜欢记笔记的，人生苦短，我可不想全部都装脑子里。。。如果用的比较少忘记了，很快查一下笔记就好了。</p>
<img src="/2016/02/26/个人小站建站记/ScreenShot.png" alt="ScreenShot.png" title="">
<p><em>主要精力应该还是在android这边，android这边感觉现在有点瓶颈，主要应该是积累的还不够，导致最近在插件化方面的研究有些吃力</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="个人小站建站记"><a href="#个人小站建站记" class="headerlink" title="个人小站建站记"></a>个人小站建站记</h1><blockquote>
<p>折腾了两天终于搭起了自己的第一个站点，恩，一件让我充满幸福感的事☺️。</p>
</blockquote>
<p>小站是用git page和hexo搭建的，使用的的主题是<a href="https://github.com/iissnan/hexo-theme-next">NexT</a>。我选择主题最重要的标准就是文章的目录好不好用，哈哈，所以看了很多之后选择了这个。</p>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://never615.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="随笔" scheme="http://never615.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
